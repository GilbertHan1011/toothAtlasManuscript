selector_to_html = {"a[href=\"#introduction\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Introduction<a class=\"headerlink\" href=\"#introduction\" title=\"Permalink to this heading\">#</a></h2><p>In this step, we perform marker detection to identify genes that are differentially expressed between different cell clusters. We use a tree-based approach to detect markers at different levels of the hierarchical clustering tree generated by MRTree in the previous step. This allows us to identify both broad markers that distinguish major cell types and more specific markers that differentiate closely related subtypes.</p>", "a[href=\"#script\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Script<a class=\"headerlink\" href=\"#script\" title=\"Permalink to this heading\">#</a></h2>", "a[href=\"#input\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Input<a class=\"headerlink\" href=\"#input\" title=\"Permalink to this heading\">#</a></h2>", "a[href=\"#output\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Output<a class=\"headerlink\" href=\"#output\" title=\"Permalink to this heading\">#</a></h2>", "a[href=\"#step-3-marker-detection\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Step 3: Marker Detection<a class=\"headerlink\" href=\"#step-3-marker-detection\" title=\"Permalink to this heading\">#</a></h1><h2>Introduction<a class=\"headerlink\" href=\"#introduction\" title=\"Permalink to this heading\">#</a></h2><p>In this step, we perform marker detection to identify genes that are differentially expressed between different cell clusters. We use a tree-based approach to detect markers at different levels of the hierarchical clustering tree generated by MRTree in the previous step. This allows us to identify both broad markers that distinguish major cell types and more specific markers that differentiate closely related subtypes.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`div.content ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,
                onShow(instance) {MathJax.typesetPromise([instance.popper]).then(() => {});},
            });
        };
    };
    console.log("tippy tips loaded!");
};
